// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  MEMBER
  ADMIN
}

enum ContentType {
  TEXT
  IMAGE
  AUDIO
  VIDEO
  PDF
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique
  name      String
  imageUrl  String?
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserType @default(MEMBER)

  posts         Post[]
  likedPostIds  String[]  @db.ObjectId
  likedComments String[]  @db.ObjectId
  comments      Comment[]
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  slug        String   @unique
  tags        String[]
  likes       Int      @default(0)

  contentType ContentType
  thumbnail   String?
  postContent String
  location    String?     @default("canada")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  researchQuestions String[]

  user     User?     @relation(fields: [userId], references: [id])
  userId   String?   @db.ObjectId
  comments Comment[]

  @@unique([title, userId])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction)
  userId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String   @db.ObjectId
  deleted   Boolean  @default(false)
  likes     Int      @default(0)

  replyToId String?   @db.ObjectId
  isReply   Boolean   @default(false)
  replyTo   Comment?  @relation("ReplyTo", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Comment[] @relation("ReplyTo")
}
